<?xml version="1.0" encoding="UTF-8" ?>
<launch>
    <arg name="device" default="cuda" doc="Device to run tensor operations on: cpu or cuda"/>
    <arg name="input" default="points_filtered_jetson" doc="Input point cloud for segmentation"/>
    <arg name="output" default="traversability" doc="Output traversability point cloud topic."/>
    <arg name="max_age" default="0.5"/>
    <arg name="debug" default="false"/>
<!--    <arg name="weights" default="deeplabv3_resnet101_lr_0.0001_bs_80_epoch_54_TraversabilityClouds_depth_64x256_labels_traversability_iou_0.919.pth"/>-->
    <arg name="weights" default="deeplabv3_resnet101_lr_0.0001_bs_64_epoch_32_TraversabilityClouds_depth_64x256_labels_traversability_iou_0.928.pth"/>
    <arg name="height" default="64"/>
    <arg name="width" default="256"/>
    <arg name="fov_elevation" default="90"/>  <!-- 90 deg -->
    <arg name="nodelet_manager" default="semantic_traversability_manager"/>
    <arg name="nodelet_action" default="$(eval 'load' if nodelet_manager.strip() else 'standalone')"/>
    <arg name="preprocessing" default="true"/>
    <arg name="tconcord3d" default="false"/>

    <group if="$(eval preprocessing)">
        <node if="$(eval nodelet_manager == 'semantic_traversability_manager')"
              name="$(arg nodelet_manager)" pkg="nodelet" type="nodelet" args="manager"
              respawn="true" respawn_delay="1.0" output="log">
            <param name="num_worker_threads" value="16"/>
        </node>

        <node name="projection_first" pkg="nodelet" type="nodelet"
              args="$(arg nodelet_action) cloud_proc/projection $(arg nodelet_manager)"
              respawn="true" respawn_delay="1.0" output="log">
            <rosparam subst_value="true">
                height: $(arg height)
                width: $(arg width)
                keep: 0  <!-- keep first -->
                azimuth_only: false
                frame: ouster_link
            </rosparam>
            <param name="fov_elevation" value="$(eval arg('fov_elevation') / 180. * 3.1415)"/>

            <remap from="input" to="$(arg input)"/>
            <remap from="output" to="points_first"/>
        </node>

        <node name="points_first_to_depth" pkg="traversability_estimation" type="cloud_to_depth"
              respawn="true" respawn_delay="1.0" output="screen">
            <rosparam>
                negative: true
            </rosparam>
            <remap from="cloud" to="points_first"/>
            <remap from="image" to="points_first_depth"/>
        </node>
    </group>

<!--    Point cloud segmentation -->
    <node unless="$(arg tconcord3d)" name="cloud_segmentation" pkg="traversability_estimation" type="cloud_segmentation">
        <env name="PYTHONPATH" value="$(dirname)/../thirdparty/vision:$(optenv PYTHONPATH)"/>
        <rosparam subst_value="true">
            device: $(arg device)
            max_age: $(arg max_age)
            lidar_channels: $(arg height)
            lidar_beams: $(arg width)
            range_projection: false
            debug: $(arg debug)
            soft_label_ind: 1
            weights: $(arg weights)
            cloud_in: points_first
            cloud_out: semantic_traversability
        </rosparam>
        <param name="lidar_fov_up" value="$(eval arg('fov_elevation') / 2.)"/>
        <param name="lidar_fov_down" value="$(eval -arg('fov_elevation') / 2.)"/>
    </node>
    <node if="$(arg tconcord3d)" name="cloud_segmentation" pkg="traversability_estimation" type="cloud_segmentation_tconcord3d">
        <rosparam subst_value="true">
            device: $(arg device)
            max_age: $(arg max_age)
            weights: student_kitti_traversablity_f0_0_time_ema.pt
            cloud_in: points_first
            cloud_out: semantic_traversability
        </rosparam>>
    </node>

    <group>
        <node name="cloud_range_filter_first" pkg="nodelet" type="nodelet"
              args="$(arg nodelet_action) cloud_proc/range_filter $(arg nodelet_manager)"
              respawn="true" respawn_delay="1.0" output="log">
            <rosparam>
                field: x
                max: 4.0
            </rosparam>
            <remap from="input" to="semantic_traversability"/>
            <remap from="output" to="semantic_traversability_range"/>
        </node>

        <node name="cloud_voxel_filter_first" pkg="nodelet" type="nodelet"
              args="$(arg nodelet_action) cloud_proc/voxel_filter $(arg nodelet_manager)"
              respawn="true" respawn_delay="1.0" output="log">
            <rosparam>
                field: x
                grid: 0.125
                zero_valid: false
            </rosparam>
            <remap from="input" to="semantic_traversability_range"/>
            <remap from="output" to="semantic_traversability_range_125mm"/>
        </node>
    </group>

    <!-- Relay to planner input topic. -->
    <node if="$(eval output != 'semantic_traversability_range_125mm')"
          name="relay_semantic_traversability" pkg="topic_tools" type="relay"
          args="semantic_traversability_range_125mm $(arg output)"/>
</launch>
